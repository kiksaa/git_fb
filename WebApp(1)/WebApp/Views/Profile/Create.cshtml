@model WebApp.Models.profile

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <script type="text/javascript" src="~/scripts/jquery-3.4.1.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#ProvinceID").change(function () {
                var selectedCountry = $(this).val();
                if (selectedCountry != "") {
                    $.ajax({
                        url: "/Register/GetAmpher",
                        data: { proID: selectedCountry },
                        success: function (result) {
                            if (result != undefined) {
                                $("#AmpherID").empty();
                                $("#AmpherID").append($("<option></option>").attr("value", "").text("เลือกอำเภอ/เขต"));
                                $.each(result, function (index, elem) {
                                    if (index == 0) {
                                        $("#AmpherID").append($("<option></option>")
                                            .attr("selected", "selected")
                                            .attr("value", elem.value)
                                            .text(elem.text));
                                    }
                                    else {
                                        $("#AmpherID").append($("<option></option>").attr("value", elem.value).text(elem.text));
                                    }
                                });
                                $("#AmpherID").change();
                            }
                        }
                    });
                }
            });

            $("#AmpherID").change(function () {
                var selectedState = $(this).val();
                if (selectedState != "") {
                    $.ajax({
                        url: "/Register/GetDistrict",
                        data: { amID: selectedState },
                        success: function (result) {
                            if (result != undefined) {
                                $("#DistrictID").empty();
                                $("#DistrictID").append($("<option></option>").attr("value", "").text("เลือกตำบล/แขวง"));
                                $.each(result, function (index, elem) {
                                    if (index == 0) {
                                        $("#DistrictID").append($("<option></option>")
                                            .attr("selected", "selected")
                                            .attr("value", elem.value)
                                            .text(elem.text));
                                    }
                                    else {
                                        $("#DistrictID").append($("<option></option>").attr("value", elem.value).text(elem.text));
                                    }
                                });
                            }
                        }
                    });
                }
                else {
                    $("#DistrictID").empty();
                    $("#DistrictID").append($("<option></option>").attr("value", "").text("เลือกตำบล/แขวง"));
                }
            });

        });
    </script>
    <style type="text/css">
        .row {
            margin-bottom: 10px !important;
        }
    </style>
</head>
<body style="color:black;background-color:whitesmoke;">
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="card-body">
            <div class="container">
                <div class="form-horizontal">
                    <h4>ประวัติส่วนตัว</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group row">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.cradID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cradID, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.cradID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.gender, "100")
                            @Html.Label("ชาย")
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.gender, "200")
                            @Html.Label("หญิง")
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.no, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.no, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.no, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.moo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.moo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.moo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.province, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.province, new SelectList(Model.ProvinceList, "Value", "Text"), "เลือกจังหวัด", new { id = "ProvinceID", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ampher, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ampher", new List<SelectListItem>(), "เลือกอำเภอ/เขต", new { id = "AmpherID", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ampher, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("district", new List<SelectListItem>(), "เลือกตำบล/แขวง", new { id = "DistrictID", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group row">
                            @Html.LabelFor(model => model.province, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.province, (IEnumerable<SelectListItem>)ViewBag.provinces, "เลือกจังหวัด", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.ampher, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ampher, (IEnumerable<SelectListItem>)ViewBag.amphers, "เลือกอำเภอ/แขวง", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ampher, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.district, (IEnumerable<SelectListItem>)ViewBag.districts, "เลือกตำบล/เขต", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group row">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.registerType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.registerType, (IEnumerable<SelectListItem>)ViewBag.registertypes, "ประเภทเกษตรกร", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.registerType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="container">
                        <div class="row justify-content-md-center">
                            <div class="form-group row">
                                <div class="col-6">
                                    <a type="button" class="btn btn-danger" href="@Url.Action("Index", "Profile")">
                                        <span>
                                            ยกเลิก
                                        </span>
                                    </a>
                                </div>
                                <div class="col-6">
                                    <input type="submit" value="บันทึก" class="btn btn-success" />
                                </div>

                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }
    <!-- Bootstrap core JavaScript-->
    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

</body>
</html>
