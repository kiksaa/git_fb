@model Farmbook.Models.theory

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>FARMBOOK - เพิ่มขั้นตอนการทำงาน</title>
</head>
<body style="color:black;background-color:whitesmoke;">
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @using (Html.BeginForm("Create", "Theory", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="col">
            <h4>ขั้นตอนการทำงาน</h4>
            <hr />
            <div class="row justify-content-center">
                <div class="shadow-lg p-3 mb-5 bg-body rounded border-bottom-success mb-3" style="width: 100rem;">
                    <h4>เพิ่มขั้นตอนการทำงาน</h4>
                    <div class="card-body">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.workProcedure, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.workProcedure, (IEnumerable<SelectListItem>)ViewBag.theorytypes, "เลือกขั้นตอนการทำงาน", htmlAttributes: new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.workProcedure, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.farmingType, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.farmingType, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.farmingType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.sepecies, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.sepecies, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.sepecies, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.product, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.product, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.product, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.project, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.project, (IEnumerable<SelectListItem>)ViewBag.projects, "เลือกโครงการ", htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.workName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.workName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.workName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.access, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.access, (IEnumerable<SelectListItem>)ViewBag.accesses, "เลือกการเข้าถึง", htmlAttributes: new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.access, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(model => model.reference, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.reference, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.reference, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.detail, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.detail, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            @*<div class="container">
                                <div class="row justify-content-md-center">
                                    <div class="form-group row">
                                        <div class="col-6">
                                            <a type="button" class="btn btn-danger" href="@Url.Action("Index", "Theory")">
                                                <span>
                                                    กลับ
                                                </span>
                                            </a>
                                        </div>
                                        <div class="col-6">
                                            <input type="submit" value="Save" class="btn btn-success" />
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="row justify-content-center">
                <div class="shadow-lg p-3 mb-5 bg-body rounded border-bottom-success mb-3" style="width: 100rem;">
                    <div class="row justify-content-start">
                        <div class="col-2">
                            <h4>แผนการดำเนินงาน</h4>
                        </div>
                        <div class="col-2">
                            <input type="submit" value="เพิ่มแผนการ +" class="btn btn-warning" href="@Url.Action("Create", "Activity", new { id = Model.ID })" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row justify-content-md-center">
                <div class="form-group row">
                    <div class="col-6">
                        <a type="button" class="btn btn-danger" href="@Url.Action("Index", "Theory")">
                            <span>
                                กลับ
                            </span>
                        </a>
                    </div>
                    <div class="col-6">
                        <input type="submit" value="บันทึก" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    }
    <!-- Bootstrap core JavaScript-->
    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<script>
    function myFunction() {
        var text = "";
        var i = 0;
        while (i < 5) {
            text += "<br>The number is " + i;
            i++;
        }
        document.getElementById("demo").innerHTML = text;
    };
    $('body').on('click', '#myButton', function () {
        var input = $('#myInput').val();
        for (var i = 0; i < input; i++) {
            alert('You have written inside input field: ' + input + ". This is Alert #" + (i + 1))
        }
    });
    document.getElementById('btn').onclick = function () {
        var totalIterations = parseInt(document.getElementById('input').value);
        var output = document.getElementById('output');
        output.innerHTML = '';
        for (var i = 1; i <= totalIterations; i++) {
            var item = document.createElement('div');
            item.innerHTML = i;
            output.appendChild(item);
            console.log("item:", x);
        }
    };
    var story = {{ story | safe}};
    var number = 0;
    var app = new Vue({
        delimiters: ['[[', ']]'],
        el: '#portofolio',
        data: {
            story: story,
            uniqueId: 0,
            number: 0,
        },
        methods: {
            generateNewId: function () {
                return uniqueId + 1;
            },
            getCurrentId: function () {
                return uniqueId;
            }
        }
    });
</script>