@model Farmbook.Models.register

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>FARMBOOK - เพิ่มทะเบียนเกษตรกร</title>

    <script type="text/javascript">
        $("#selectlist").change(function () {
            var provinceID = $("#selectlist").val();
            $.ajax
                ({
                    type: "GET",
                    url: "/RegisterController/GetCityList?ProvinceID=" + provinceID,
                    success: function (result) {
                        $("#cityListWrapper").html(result)
                    }
                });
        });
    </script>
    <script type="text/javascript">
            $('#Country').change(function () {
                var selectedCountry = $("#Country").val();
                var regionsSelect = $('#Region');
                regionsSelect.empty();
                if (selectedCountry != null && selectedCountry != '') {
                    $.getJSON('@Url.Action("GetRegions")', { iso3: selectedCountry }, function (regions) {
                        if (regions != null && !jQuery.isEmptyObject(regions))
                        {
                            regionsSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(regions, function (index, region) {
                                regionsSelect.append($('<option/>', {
                                    value: region.Value,
                                    text: region.Text
                                }));
                            });
                        };
                    });
                }
            });
    </script>

    <script type="text/javascript">
        $('#province').change(function () {
            var provinceID = $("province").val();
            if (provinceID) {
                $.ajax({
                    type: "GET",
                    url: "/Register/Create/" + provinceID,
                    success: function (res) {
                        if (res) {
                            $("#districts").empty();
                            $("#districts").append('<option>Select</option>');
                            $.each(res, function (key, value) {
                                $("#districts").append('<option value="' + key + '">' + value + '</option>');
                            });

                        } else {
                            $("#districts").empty();
                        }
                    }
                });
            } else {
                $("#districts").empty();
                $("#subdistrict").empty();
            }
            console.log('province id', provinceID);
        });
        $('#districts').on('change', function () {
            var districtsID = $(this).val();
            if (districtsID) {
                $.ajax({
                    type: "GET",
                    url: "http://dev.example.com/api/subdistrict_list?kab=" + districtsID,
                    success: function (res) {
                        if (res) {
                            $("#subdistrict").empty();
                            $.each(res, function (key, value) {
                                $("#subdistrict").append('<option value="' + key + '">' + value + '</option>');
                            });

                        } else {
                            $("#subdistrict").empty();
                        }
                    }
                });
            } else {
                $("#subdistrict").empty();
            }
        });
    </script>

    <script type="text/javascript">
        function Create() {
           @* $("#Subdistrict").empty();//ล้างข้อมูล
            $("#DisID").val("");//ล้างข้อมูล
            $("#SubID").val("");//ล้างข้อมูล*@
            var provinceID = document.getElementById("proID").value;
            var NRB;
            alert(provinceID);
            if (provinceID) {
                $.ajax(
                    {
                       url: '@Url.Action("Create", "Register")',
                                type: 'GET',
                       data: { provinceID: provinceID },
                        cache: false,
                        dataType: "json",
                        success: function (provinceID) {
                            window.Selection.ampherID.reload();
                            $('select[name="ampherName"]').empty();
                            $.each(data, function (key, value) {
                                $('select[name="ampherName"]').append('<option value="' + value + '">' + value + '</option>');
                            });
                        }
                    });
            } else {
                $('select[name="ampherName"]').empty();
            }
        }
        function Amphers() {
            @*$("#Subdistrict").empty();
            $("#SubID").val("");*@
           @* $('#ampID').change(function () {*@
                var ampherID = document.getElementById("ampID").value;
                var NRB;
                alert(ampherID);
                $.ajax(
                    {
                        url: '@Url.Action("Create", "Register")',
                        type: 'GET',
                        data: { ampherID: ampherID },
                        cache: false,
                        success: function (result) {
                            var NCRB = '@Session["NewBTrate"]';
                            alert(NCRB);
                            $('#Transaction_Rate').val(NCRB);
                            window.location.reload();
                        }
                    });
            @*$("#DisID").val($(this).val());*@
           @* });*@
        }
    </script>
    <script>
        function myFunction() {
            var x = document.getElementById("mySelect").value;// คืนค่า value ที่เลือก
            @*var value = x.selectElement.options[x.selectedIndex].value;// get selected option value
            var text = x.options[x.selectedIndex].text;//get the selected option text*@
            @*alert(value , text);*@
            document.getElementById("demo").innerHTML = "You selected: " + x;
            console.log("x:", x);
        };

        function Function() {
            var y = document.getElementById("Select").selectedIndex;// คืนค่าอันดับที่เลือก
            document.getElementById("mo").innerHTML = "You selected: " + y;
            console.log("y:", y);
        };
    </script>
    <script>
        var carsAndModels = {};
        carsAndModels['VO'] = ['V70', 'XC60', 'XC90'];
        carsAndModels['VW'] = ['Golf', 'Polo', 'Scirocco', 'Touareg'];
        carsAndModels['BMW'] = ['M6', 'X5', 'Z3'];

        function ChangeCarList() {
            var carList = document.getElementById("car");
            var modelList = document.getElementById("carmodel");
            var selCar = carList.options[carList.selectedIndex].value;
            while (modelList.options.length) {
                modelList.remove(0);
            }
            var cars = carsAndModels[selCar];
            if (cars) {
                var i;
                for (i = 0; i < cars.length; i++) {
                    var car = new Option(cars[i], i);
                    modelList.options.add(car);
                }
            }
        }
    </script>
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </symbol>
        <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
        </symbol>
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
</head>
<body style="color:black;background-color:whitesmoke;">

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @using (Html.BeginForm("Create", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
    <div class="col">
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Warning:"><use xlink:href="#info-fill" /></svg>
            <strong>ขั้นตอนแรก!</strong> เพิ่มข้อมูลเกษตกรให้สมบูรณ์
            <button class="close" type="button" data-dismiss="alert" aria-label="Close">&times;</button>
        </div>
        <h4>เพิ่มทะเบียนเกษตรกร</h4>
        <hr />
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.farmer_img, htmlAttributes: new { @class = "control-label col-md-7" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.farmer_img, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.card_img, htmlAttributes: new { @class = "control-label col-md-7" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.card_img, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                    </div>
                </div>
                @ViewBag.ActionMessage
            </div>
            <div class="col-sm-6">

                <div class="form-group row">
                    @*@Html.Label("*", new { @class = "text-danger" })*@
                    @*<span style="color:red;">*</span>*@
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "ชื่อ นามสกุล", required = "required" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.registerID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.registerID, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.registerID, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.cardID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.cardID, new { htmlAttributes = new { @class = "form-control", placeholder = "xxxxxxxxxxxxx", required = "required" } })
                        @Html.ValidationMessageFor(model => model.cardID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.RadioButtonFor(model => model.gender, "100")
                        @Html.Label("ชาย")
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.RadioButtonFor(model => model.gender, "200")
                        @Html.Label("หญิง")
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", required = "required", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @*@Html.Label("*", htmlAttributes: new { @class = "text-danger" })*@
                    @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "example@gmail.com", required = "required" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.family, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.RadioButtonFor(model => model.family, "100")
                        @Html.Label("หัวหน้าครอบครัว")
                        @Html.ValidationMessageFor(model => model.family, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.RadioButtonFor(model => model.family, "200")
                        @Html.Label("สมาชิกในครอบครัว")
                        @Html.ValidationMessageFor(model => model.family, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.no, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.no, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.no, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.moo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.moo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.moo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.road, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.road, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.road, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.provinceStr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.provinceStr, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.provinceStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.ampherStr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ampherStr, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ampherStr, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.districtStr, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.districtStr, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.districtStr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <p id="mo"></p>
                @*<div class="form-group row">
                    @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.comment, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>*@

                @*<div class="form-group row">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.status, (IEnumerable<SelectListItem>)ViewBag.status, "เลือกสถานะ", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>*@
                <div class="form-group row">
                    @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.comment, new { @class = "form-control" } )
                    </div>
                </div>
                <div class="container">
                    <div class="row justify-content-md-center">
                        <div class="form-group row">
                            <div class="col-6">
                                <a type="button" class="btn btn-danger" href="@Url.Action("Index", "Register")">
                                    <span>
                                        กลับ
                                    </span>
                                </a>
                            </div>
                            <div class="col-6">
                                <input type="submit" value="บันทึก" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.bankuser.bankID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(modelItem => modelItem.bankuser.bankID, (IEnumerable<SelectListItem>)ViewBag.banks, "เลือกธนาคาร", htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.bankuser.bankID, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    @Html.LabelFor(model => model.bankuser.bankName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.bankuser.bankName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.bankuser.bankName, "", new { @class = "text-danger" })
                    </div>
                    <br />
                    @Html.LabelFor(model => model.bankuser.bankNo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.bankuser.bankNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.bankuser.bankNo, "", new { @class = "text-danger" })
                    </div>
                    @*@Html.Action("Index", "Plot")*@
                    @*@Url.Action("Create", "Bankuser")*@
                    <br />
                    <div class="col-md-12">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>
                                        #
                                    </th>
                                    <th>
                                        โครงการ
                                    </th>
                                    <th>
                                        ชื่อแปลง
                                    </th>
                                    <th>
                                        ที่อยู่
                                    </th>
                                    <th>
                                        ลบ/ แก้ไข
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        @*@Html.DisplayFor(model => Model.landplots)*@
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                       @*@Html.ActionLink("Delete", "#") |
                                        @Html.ActionLink("Edit", "#")*@
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <input type="submit" value="เพิ่มข้อมูลแปลง" class="btn btn-warning" href="@Url.Action("Create", "Plot", new { id = Model.ID })" />
                    </div>
                </div>
            </div>


        </div>
    </div>
    }
    <!-- Bootstrap core JavaScript-->
    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
</body>
</html>

@*<script type="text/javascript">
        $(function () {
            $('#datetimepicker1').datetimepicker();
        });
    </script>*@

<script type="text/javascript">
    $("#selectlist").change(function () {
        var countryId = $("#selectlist").val();
        $.ajax
            ({
                type: "GET",
                url: '/RegisterController/GetCityList?CountryId=' + countryId,
                success: function (result) {
                    $("#cityListWrapper").html(result)
                }
            });
    });
</script>