@model Test.Models.register

@{
    Layout = "~/Views/Shared/_Layaccount.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>FARMBOOK - เพิ่มทะเบียนเกษตรกร</title>

    <!--<script>
    function ajax(url, callback) {
        $.ajax({
            "url": url,
            "type": "GET",
            "dataType": "json",
        })
            .done(callback); //END AJAX
    }
    document.addEventListener('DOMContentLoaded', (event) => {
        console.log("START");
        showProvinces();
    });
    function showProvinces() {
        //PARAMETERS
        fetch("{{ url('/') }}/api/provinces")
            .then(response => response.json())
            .then(result => {
                console.log(result);
                //UPDATE SELECT OPTION
                let input_province = document.querySelector("#input_province");
                input_province.innerHTML = "";
                for (let item of result) {
                    let option = document.createElement("option");
                    option.text = item.provinceName;
                    option.value = item.provinceID;
                    input_province.add(option);
                }
                //QUERY AMPHOES
                showAmphoes();
            });
    }
    function showAmphoes() {
        let input_province = document.querySelector("#input_province");
        fetch("{{ url('/') }}/api/province/" + input_province.value + "/ampher")
            .then(response => response.json())
            .then(result => {
                console.log(result);
                //UPDATE SELECT OPTION
                let input_amphoe = document.querySelector("#input_ampher");
                input_amphoe.innerHTML = "";
                for (let item of result) {
                    let option = document.createElement("option");
                    option.text = item.ampherName;
                    option.value = item.ampherID;
                    input_ampher.add(option);
                }
                //QUERY AMPHOES
                showTambons();
            });
    }
    function showTambons() {
        let input_province = document.querySelector("#input_province");
        let input_amphoe = document.querySelector("#input_ampher");
        fetch("{{ url('/') }}/api/province/" + input_province.value + "/ampher/" + input_amphoe.value + "/districts")
            .then(response => response.json())
            .then(result => {
                console.log(result);
                //UPDATE SELECT OPTION
                let input_tambon = document.querySelector("#input_districts");
                input_tambon.innerHTML = "";
                for (let item of result) {
                    let option = document.createElement("option");
                    option.text = item.districtsName;
                    option.value = item.districtsID;
                    input_districts.add(option);
                }
                //QUERY AMPHOES
                showZipcode();
            });
    }-->
    @*$(document).ready(function () {
            console.log("HELLO");
            showProvinces();
        });*@
    <!--$(function () {
        $('#ddlDMManagers').change(function () {
            var provinceID = $(this).val();

            $.ajax({
                url: 'LoadTerritoryManagers',
                type: 'POST',
                data: JSON.stringify({ provinceID: provinceID }),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $.each(data, function (key, ProvinceInfo) {
                        $('#ddlTMManagers').append('<option value="0">Select One</option>');
                        // loop through the TM Managers and fill the dropdown
                        $.each(ProvinceInfo, function (index, manager) {
                            $('#ddlTMManagers').append(
                                '<option value="' + manager.ampherID + '">'
                                + manager.ampherName +
                                '</option>');
                        });
                    });
                }
            });
        });
    });
    </script>-->
<script type="text/javascript">
        $("#selectlist").change(function () {
            var provinceID = $("#selectlist").val();
            $.ajax
                ({
                    type: "GET",
                    url: "/RegisterController/GetCityList?ProvinceID=" + provinceID,
                    success: function (result) {
                        $("#cityListWrapper").html(result)
                    }
                });
        });
</script>
    <script>
        function myFunction() {
            var x = document.getElementById("mySelect").value;
            @*var value = x.selectElement.options[x.selectedIndex].value;// get selected option value
            var text = x.options[x.selectedIndex].text;//get the selected option text*@
            @*alert(value , text);*@
            document.getElementById("demo").innerHTML = "You selected: " + x;
            console.log("x:", x);
        };

        function Function() {
            var y = document.getElementById("Select").selectedIndex;
            document.getElementById("mo").innerHTML = "You selected: " + y;
            console.log("y:", y);
        };
    </script>
   
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @using (Html.BeginForm("Create", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <br />
        <div class="col">
            <h4>เพิ่มทะเบียนเกษตรกร</h4>
            <hr />
            <select id="car" onchange="ChangeCarList()">
            <option value="">-- Car --</option>
            <option value="VO">Volvo</option>
            <option value="VW">Volkswagen</option>
            <option value="BMW">BMW</option>
            </select>

            <select id="carmodel"></select>

            <script>
                var carsAndModels = {};
                carsAndModels['VO'] = ['V70', 'XC60', 'XC90'];
                carsAndModels['VW'] = ['Golf', 'Polo', 'Scirocco', 'Touareg'];
                carsAndModels['BMW'] = ['M6', 'X5', 'Z3'];

                function ChangeCarList() {
                    var carList = document.getElementById("car");
                    var modelList = document.getElementById("carmodel");
                    var selCar = carList.options[carList.selectedIndex].value;
                    while (modelList.options.length) {
                        modelList.remove(0);
                    }
                    var cars = carsAndModels[selCar];
                    if (cars) {
                        var i;
                        for (i = 0; i < cars.length; i++) {
                            var car = new Option(cars[i], i);
                            modelList.options.add(car);
                        }
                    }
                }
            </script>
            <div class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.farmer_img, htmlAttributes: new { @class = "control-label col-md-7" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.farmer_img, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                            @Html.ValidationMessageFor(model => model.farmer_img, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.card_img, htmlAttributes: new { @class = "control-label col-md-7" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.card_img, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                            @Html.ValidationMessageFor(model => model.card_img, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @ViewBag.ActionMessage
                </div>
                <div class="col-sm-6">

                    <div class="form-group row">
                        @*@Html.Label("*", new { @class = "text-danger" })*@
                        <span style="color:red;">*</span>
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "ชื่อ นามสกุล" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.registerID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.registerID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.registerID, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.cardID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.cardID, new { htmlAttributes = new { @class = "form-control", placeholder = "xxxxxxxxxxxxx" } })
                            @Html.ValidationMessageFor(model => model.cardID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.gender, "100")
                            @Html.Label("ชาย")
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.gender, "200")
                            @Html.Label("หญิง")
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "วัน/เดือน/ปี(พ.ศ) เกิด" } })
                            @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @*@Html.Label("*", htmlAttributes: new { @class = "text-danger" })*@
                        @Html.LabelFor(model => model.tel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.tel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.tel, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "example@gmail.com" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.family, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.RadioButtonFor(model => model.family, "100")
                            @Html.Label("หัวหน้าครอบครัว")
                            @Html.ValidationMessageFor(model => model.family, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            @Html.RadioButtonFor(model => model.family, "200")
                            @Html.Label("สมาชิกในครอบครัว")
                            @Html.ValidationMessageFor(model => model.family, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.no, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.no, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.no, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.moo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.moo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.moo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.road, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.road, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.road, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.province, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.province, (IEnumerable<SelectListItem>)ViewBag.provinces, "เลือกจังหวัด", htmlAttributes: new { @class = "form-control", @field = "Update", @id = "mySelect", @onchange = "myFunction()" })
                            @Html.ValidationMessageFor(model => model.province, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <p id="demo"></p>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ampher, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @* @if (Model.province != null)
                        {*@
                            @Html.DropDownListFor(model => model.ampher, (IEnumerable<SelectListItem>)ViewBag.amphers, "เลือกอำเภอ/แขวง", htmlAttributes: new { @class = "form-control", @field = "Update", @id = "Select", @onchange = "Function()" })
                            @*}*@
                            @Html.ValidationMessageFor(model => model.ampher, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.district, (IEnumerable<SelectListItem>)ViewBag.districts, "เลือกตำบล/เขต", htmlAttributes: new { @class = "form-control", @field = "Update" })
                            @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <p id="mo"></p>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.comment, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.status, (IEnumerable<SelectListItem>)ViewBag.status, "เลือกสถานะ", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.bankuser.bankID, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(modelItem => modelItem.bankuser.bankID, (IEnumerable<SelectListItem>)ViewBag.banks, "เลือกธนาคาร", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.bankuser.bankID, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        @Html.LabelFor(model => model.bankuser.bankName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.bankuser.bankName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.bankuser.bankName, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        @Html.LabelFor(model => model.bankuser.bankNo, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.bankuser.bankNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.bankuser.bankNo, "", new { @class = "text-danger" })
                        </div>
                        @*  @Html.Action("Index", "Plot")*@
                        @*@Url.Action("Create", "Bankuser")*@
                        <br />
                        <div class="col-md-12">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>
                                            #
                                        </th>
                                        <th>
                                            โครงการ
                                        </th>
                                        <th>
                                            ชื่อแปลง
                                        </th>
                                        <th>
                                            ที่อยู่
                                        </th>
                                        <th>
                                            ลบ/ แก้ไข
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>
                                            @* @Html.DisplayFor(model => Model.landplots)*@
                                        </td>
                                        <td>
                                        </td>
                                        <td>
                                        </td>
                                        <td>
                                        </td>
                                        <td>
                                            @Html.ActionLink("Delete", "#") |
                                            @Html.ActionLink("Edit", "#")
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <input type="submit" value="เพิ่มข้อมูลแปลง" class="btn btn-warning" href="@Url.Action("Create", "Plot", new { id = Model.ID })" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-form-label">Country</label>
                    <select class="form-control" asp-items="@ViewBag.Country" id="selectlist">
                        <option>All</option>
                    </select>
                </div>

                <div class="form-group" id="cityListWrapper">
                    <partial name="_CityListPartial" model="@ViewBag.City" />
                </div>


                <div class="container">
                    <div class="row justify-content-md-center">
                        <div class="form-group row">
                            <div class="col-6">
                                <a type="button" class="btn btn-danger" href="@Url.Action("Index", "Register")">
                                    <span>
                                        กลับ
                                    </span>
                                </a>
                            </div>
                            <div class="col-6">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</body>
</html>

@*<script type="text/javascript">
        $(function () {
            $('#datetimepicker1').datetimepicker();
        });
    </script>*@

    <script type="text/javascript">
        $("#selectlist").change(function () {
            var countryId = $("#selectlist").val();
            $.ajax
                ({
                    type: "GET",
                    url: '/RegisterController/GetCityList?CountryId=' + countryId,
                    success: function (result) {
                        $("#cityListWrapper").html(result)
                    }
                });
        });
    </script>